
1) Cubrid source code를 분석하여, 로그파일을 저장하는 구조를 알아낸다.

2) 알아낸 구조체를 바탕으로, binary 파일을 읽어내는 프로그램을 만든다.

3) 읽어낸 정보를, 정렬해서 출력해 주는 프로그램을 만든다.

4) 만들어낸 프로그램을, api화 해서 모든 사람들이 사용할 수 있도록 한다.

( 1번에서 가장 긴 시간이 걸릴 것으로 예상하며, 구조체를 모두 분석한다면 충분히 만들 수 있다고 예상한다. )

( 컴퓨터 네트워크 과제의 일부 였던 pcap 파일 텍스트화 했던 과제를 예제로 삼아서
  작업하면, 큰 도움이 될 것 같다. (pcap 파일의 ip header를 읽어서, 바이트 단위로 읽은 정보를 출력해주는 과제) )

[2017.09.19 - 관계자와 통화를 통해 얻은 정보]

1. copylogdb는 마스터 노드에서 생성된 노드를 복제해서, 로그볼륨 형태로 저장하는 프로세스.(이 볼륨형태는 실제 로그볼륨 형태와 같다)

2. applylogdb는 copylogdb가 생성한 로그볼륨을 읽으면서, 필요한 로그들을 슬레이브 노드에 적용시키는 프로세스.

3. applyinfo 프로세스에, 로그헤더를 읽는 정보들이 많이 있음.
applylogdb 분석보다 applyinfo를 먼저 분석하는 것을 추천해주심.

4. 만드는 api는 기간 별, 트랜잭션 id 별로 조회할 수 있는 형태였으면 좋겠다고 하심.
